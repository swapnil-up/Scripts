;; defsrc is still necessary
(defcfg
  process-unmapped-keys yes
)

(defsrc
  1 2 3 4 5 6 7 8 9 0 - 
  q w e r t y u i o p
  caps a s d f g h j k l lmet lalt spc ralt rctl
  x
)
(defvar
  tap-time 150
  hold-time 200
  slow-hold-time 120 
)


;;(defoverrides
;;  (lctl spc) (ret)
;;  (rctl spc) (ret)
;;)


(defalias
  1 (multi lmet 1)
  2 (multi lmet 2)
  3 (multi lmet 3)
  4 (multi lmet 4)
  5 (multi lmet 5)
  6 (multi lmet 6)
  7 (multi lmet 7)
  8 (multi lmet 8)
  9 (multi lmet 9)
  0 (multi lmet 0)
  - (multi lmet -)



  symbol (layer-while-held symbollayer)
  r (tap-hold $tap-time $hold-time r @symbol)
  u (tap-hold $tap-time $hold-time u @symbol)

  escctrl (tap-hold 100 100 esc lctl)
  a (tap-hold $tap-time $hold-time a lmet)
  s (tap-hold $tap-time $hold-time s lalt)
  d (tap-hold $tap-time $hold-time d lsft)
  f (tap-hold $tap-time $hold-time f lctl)
  j (tap-dance 200
     ((tap-hold $tap-time $hold-time j rctl) esc)) 
  k (tap-hold $tap-time $hold-time k rsft)
  l (tap-hold $tap-time $hold-time l ralt)
  ;; (multi f24 (tap-hold $tap-time $hold-time ; rmet))

  rescctl (tap-hold 150 200 esc rctl)
  spacefn       (layer-while-held spacefnlayer)
  spfn (tap-hold $tap-time $hold-time spc @spacefn)
  lmet (tap-hold $tap-time $hold-time ret lmet)
  rmall  (macro C-home C-S-end del home S-end del)
)


(deflayer base
  1 2 3 4 5 6 7 8 9 0 - 
  q w e @r t y @u i o p
  @escctrl @a @s @d @f g h @j @k @l lalt @lmet @spfn bspc @rescctl
  x
)

(deflayer spacefnlayer
  @1 @2 @3 @4 @5 @6 @7 @8 @9 @0 @-
  q w e r t home pgdn pgup end p
  @escctrl @a @s @d @f g left down up right lalt lmet spc bspc @rescctl
  @rmall
)

(deflayer symbollayer
  1 2 3 4 5 6 7 8 9 0 - 
  q w e r t y u i o p
  @escctrl @a [ S-9 S-[ + h = - S-/ lalt @lmet @spfn bspc @rescctl
  x
)